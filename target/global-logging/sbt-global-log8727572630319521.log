[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Oracle Corporation Java 1.8.0_302)
[debug] Load.defaultLoad until apply took 195.19568ms
[debug]                 Load.loadUnit: plugins took 45.9469ms
[debug]                 Load.loadUnit: defsScala took 0.219894ms
[debug] [Loading] Scanning directory /home/pcdm/hann/test/project/project
[debug]                   Load.loadUnit: mkEval took 5.189699ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/pcdm/hann/test/project/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 10.519288 ms
[info] loading settings for project test-build-build from metals.sbt ...
[debug]                     Load.resolveProject(test-build-build) took 30.681704ms
[debug]                   Load.loadTransitive: finalizeProject(Project(id test-build-build, base: /home/pcdm/hann/test/project/project, plugins: List(<none>))) took 47.041579ms
[debug] [Loading] Done in /home/pcdm/hann/test/project/project, returning: (test-build-build)
[debug]                 Load.loadUnit: loadedProjectsRaw took 1296.8837ms
[debug]                 Load.loadUnit: cleanEvalClasses took 15.026103ms
[debug]               Load.loadUnit(file:/home/pcdm/hann/test/project/project/, ...) took 1361.45123ms
[debug]             Load.apply: load took 1424.175948ms
[debug]             Load.apply: resolveProjects took 3.573535ms
[debug]             Load.apply: finalTransforms took 36.740799ms
[debug]             Load.apply: config.delegates took 4.429305ms
[debug]             Load.apply: Def.make(settings)... took 224.63095ms
[debug]             Load.apply: structureIndex took 58.754836ms
[debug]             Load.apply: mkStreams took 1.157519ms
[info] loading project definition from /home/pcdm/hann/test/project/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]           Load.loadUnit: plugins took 2836.265511ms
[debug]           Load.loadUnit: defsScala took 0.002705ms
[debug] [Loading] Scanning directory /home/pcdm/hann/test/project
[debug]             Load.loadUnit: mkEval took 0.14427ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/pcdm/hann/test/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(bloop.integrations.sbt.BloopPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(bloop.integrations.sbt.BloopPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,bloop.integrations.sbt.BloopPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.553238 ms
[info] loading settings for project test-build from metals.sbt ...
[debug]               Load.resolveProject(test-build) took 14.322452ms
[debug]             Load.loadTransitive: finalizeProject(Project(id test-build, base: /home/pcdm/hann/test/project, plugins: List(<none>))) took 16.401989ms
[debug] [Loading] Done in /home/pcdm/hann/test/project, returning: (test-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 274.07683ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.574048ms
[debug]         Load.loadUnit(file:/home/pcdm/hann/test/project/, ...) took 3111.408907ms
[debug]       Load.apply: load took 3112.436518ms
[debug]       Load.apply: resolveProjects took 0.119611ms
[debug]       Load.apply: finalTransforms took 8.9298ms
[debug]       Load.apply: config.delegates took 0.280148ms
[debug]       Load.apply: Def.make(settings)... took 67.301925ms
[debug]       Load.apply: structureIndex took 16.507162ms
[debug]       Load.apply: mkStreams took 0.002015ms
[info] loading project definition from /home/pcdm/hann/test/project
[debug] Evaluating tasks: bloopInstall
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[success] Generated .bloop/test-build.json
[success] Total time: 1 s, completed Mar 16, 2023 10:34:12 PM
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 4432.725705ms
[debug]     Load.loadUnit: defsScala took 0.001987ms
[debug] [Loading] Scanning directory /home/pcdm/hann/test
[debug]       Load.loadUnit: mkEval took 0.101325ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/pcdm/hann/test, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(bloop.integrations.sbt.BloopPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(bloop.integrations.sbt.BloopPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,bloop.integrations.sbt.BloopPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.822943 ms
[info] loading settings for project test from build.sbt ...
[debug]         Load.resolveProject(test) took 12.706182ms
[debug]       Load.loadTransitive: finalizeProject(Project(id test, base: /home/pcdm/hann/test, plugins: List(<none>))) took 13.869399ms
[debug] [Loading] Done in /home/pcdm/hann/test, returning: (test)
[debug]     Load.loadUnit: loadedProjectsRaw took 675.172275ms
[debug]     Load.loadUnit: cleanEvalClasses took 1.178705ms
[debug]   Load.loadUnit(file:/home/pcdm/hann/test/, ...) took 5109.8765ms
[debug] Load.apply: load took 5122.7326ms
[debug] Load.apply: resolveProjects took 0.072445ms
[debug] Load.apply: finalTransforms took 7.110234ms
[debug] Load.apply: config.delegates took 0.208521ms
[debug] Load.apply: Def.make(settings)... took 45.740049ms
[debug] Load.apply: structureIndex took 12.620469ms
[debug] Load.apply: mkStreams took 0.002025ms
[info] set current project to KafkaTest (in build file:/home/pcdm/hann/test/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(bloopInstall, None, None)
[debug] Evaluating tasks: bloopInstall
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
